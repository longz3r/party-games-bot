const { bold, italic, strikethrough, underscore, spoiler, quote, blockQuote } = require('@discordjs/builders');
const { MessageActionRow, MessageButton } = require('discord.js');

function createUser(amount) {
    return (`T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi s·ªë ti·ªÅn ban ƒë·∫ßu l√† ${amount} RTM\nB·∫°n c√≥ th·ªÉ n·∫°p ti·ªÅn b·∫±ng c√°ch s·ª≠ d·ª•ng: ${bold("rtm.send <@954355946065375242> <s·ªë ti·ªÅn>")}`)
}

function napTien(amount, newBalance) {
    return (`B·∫°n ƒë√£ n·∫°p ${bold(amount)} RTM v√†o t√†i kho·∫£n\nT√†i kho·∫£n hi·ªán t·∫°i l√†: ${bold(newBalance)} RTM`)
}

function balance(balance) {
    return (`B·∫°n ƒëang c√≥ ${bold(balance)} RTM`)
}

function balanceNotEnough(currentBalance) {
    return (`S·ªë d∆∞ t√†i kho·∫£n c·ªßa b·∫°n kh√¥ng ƒë·ªß ƒë·ªÉ th·ª±c hi·ªán. B·∫°n ƒëang c√≥ ${bold(currentBalance)} RTM\nB·∫°n c√≥ th·ªÉ n·∫°p ti·ªÅn b·∫±ng c√°ch s·ª≠ d·ª•ng: ${bold("rtm.send <@954355946065375242> <s·ªë ti·ªÅn>")}`)
}

function betEmbed(userID, resulttx, resultwl, amount, newBalance, avatarURL) {
    if (resulttx == "xiu") {
        resulttx = bold("X·ªâu")
    } else if (resulttx == "tai") {
        resulttx = bold("T√†i")
    } else if (resulttx == "chan") {
        resulttx = bold("Ch·∫µn")
    } else if (resulttx == "le") {
        resulttx = bold("L·∫ª")
    }
    amount = bold(amount)

    if (resultwl == "win") {
        resultwl = "th·∫Øng"
        var color = "#000FF00"
    } else if (resultwl == "lose") {
        resultwl = "thua"
        var color = "FF0000"
    }

    const embed = {
        color: color,
        title: `K·∫øt qu·∫£: ${resulttx}`,
        description: `<@${userID}> ƒë√£ ${resultwl} ${amount} RTM`,
        thumbnail: {
            url: avatarURL,
        },
        fields: [
            {
                name: `\u200b`,
                value: `S·ªë d∆∞ m·ªõi c·ªßa b·∫°n l√† ${bold(newBalance)} RTM`,
            }
        ],
        footer: {
            text: 'Party Games developed by Long Zer',
        },
    }
    return embed
}

function timeout(lastMessage, currentTime) {
    return (`Vui l√≤ng ƒë·ª£i ${bold((4000 - (currentTime - lastMessage)) / 1000)} gi√¢y tr∆∞·ªõc khi th·ª±c hi·ªán c√¢u l·ªánh ti·∫øp theo`)
}

function diceEmbed(dice, round, betAmount, userID, choice, avatarURL) {
    if (choice == "xiu") {
        choice = "x·ªâu"
    } else if (choice == "tai") {
        choice = "t√†i"
    } else if (choice == "le") {
        choice = "l·∫ª"
    } else if (choice == "chan") {
        choice = "ch·∫µn"
    }
    const embed = {
        color: "#08B2E3",
        title: `${bold(`V√≤ng #${round}`)}`,
        description: `<@${userID}> ƒë√£ ƒë·∫∑t ${bold(betAmount)} RTM v√†o ${bold(choice)}`,
        thumbnail: {
            url: avatarURL,
        },
        fields: [
            {
                name: 'üé≤1:',
                value: spoiler(dice[0]),
                inline: true,
            },
            {
                name: 'üé≤2:',
                value: spoiler(dice[1]),
                inline: true,
            },
            {
                name: 'üé≤3:',
                value: spoiler(dice[2]),
                inline: true,
            },
        ],
        footer: {
            text: `Party Games developed by Long Zer`,
        },
    }
    return embed
}

function helpEmbed() {
    const embed = {
        color: "#08B2E3",
        title: `${bold("Danh s√°ch c√°c c√¢u l·ªánh")}`,
        description: `${bold("rtm.create")} - T·∫°o t√†i kho·∫£n m·ªõi\n${bold("rtm.send")} - N·∫°p ti·ªÅn v√†o t√†i kho·∫£n\n${bold("rtm.balance")} - Hi·ªÉn th·ªã s·ªë d∆∞ t√†i kho·∫£n\n${bold("rtm.bet")} - ƒê·∫∑t c∆∞·ª£c\n${bold("rtm.help")} - Hi·ªÉn th·ªã danh s√°ch c√°c c√¢u l·ªánh`,
        footer: {
            text: 'Developed by Long Zer',
        },
    }
    return embed
} 

function otherUserBalance(userID, balance) {
    return (`S·ªë d∆∞ c·ªßa <@${userID}> l√† ${bold(balance)} RTM`)
}

function withdrawAddressChange(address) {
    return ("ƒê·ªãa ch·ªâ v√≠ RTM m·ªõi c·ªßa b·∫°n l√†: " + "`" + address + "`")
}

function withdrawConfirmation(amount, address) {
    const embed = {
        color: "#08B2E3",
        title: "X√°c nh·∫≠n l·ªánh r√∫t ti·ªÅn",
        description: "Vui l√≤ng x√°c nh·∫≠n l·ªánh r√∫t ti·ªÅn c·ªßa b·∫°n b·∫±ng c√°ch ·∫•n n√∫t b√™n d∆∞·ªõi \nCh√∫ng t√¥i s·∫Ω kh√¥ng ch·ªãu tr√°ch nhi·ªám n·∫øu sai ƒë·ªãa ch·ªâ",
        thumbnail: {
            url: "https://i.imgur.com/PNyjWYq.png"
        },
        fields: [
            {
                name: "S·ªë l∆∞·ª£ng",
                value: "`" + amount + " RTM`",
                inline: true
            },
            {
                name: "ƒê·ªãa ch·ªâ",
                value: "`" + address + "`",
                inline: true,
            },
            {
                name: '\u200b',
                value: '\u200b',
                inline: true    ,
            },
            {
                name: 'Ph√≠ (5%)',
                value: "`" + (amount * 0.05) + " RTM`",
                inline: false,
            },
            {
                name: 'S·ªë l∆∞·ª£ng cu·ªëi c√πng',
                value: "`" + (amount - (amount * 0.05)) + " RTM`",
            }
        ],
        footer: {
            text: 'H√†nh ƒë·ªông n√†y s·∫Ω b·ªã hu·ª∑ sau 60 gi√¢y\nParty Games developed by Long Zer',
        },
    }
    return embed
}

function withdrawConfirmationButton() {
    const row = new MessageActionRow()
			.addComponents(
				new MessageButton()
					.setCustomId('confirm')
					.setLabel('X√°c nh·∫≠n')
					.setStyle('SUCCESS')
                    .setEmoji("‚úÖ"),
                new MessageButton()
                    .setCustomId('cancel')
                    .setLabel('Hu·ª∑')
                    .setStyle('DANGER')
                    .setEmoji("‚ùé")
		)
    return row
}

function withdrawConfirmed(amount, address) {
    const embed = {
        color: "#000FF00",
        title: "L·ªánh r√∫t ti·ªÅn ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n",
        description: "L·ªánh r√∫t ti·ªÅn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n",
        thumbnail: {
            url: "https://i.imgur.com/PNyjWYq.png"
        },
        fields: [
            {
                name: "ƒê·ªãa ch·ªâ",
                value: "`" + address + "`",
                inline: false,
            },
            {
                name: "S·ªë l∆∞·ª£ng",
                value: "`" + (amount - (amount * 0.05)) + " RTM`",
                inline: true
            },
        ],
        footer: {
            text: 'B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c trong 24 gi·ªù\nParty Games developed by Long Zer',
        },
    }
    return embed
}

function withdrawCancelled() {
    const embed = {
        color: "#FF0000",
        title: "L·ªánh r√∫t ti·ªÅn ƒë√£ b·ªã h·ªßy",
        description: "L·ªánh r√∫t ti·ªÅn c·ªßa b·∫°n ƒë√£ b·ªã hu·ª∑",
        thumbnail: {
            url: "https://i.imgur.com/PNyjWYq.png"
        },
        footer: {
            text: 'Party Games developed by Long Zer',
        },
    }
    return embed
}

function withdrawDM(amount, address, txid) {
    const embed = {
        color: "#08B2E3",
        title: "L·ªánh r√∫t ti·ªÅn ƒë√£ ƒë∆∞·ª£c ho√†n th√†nh",
        description: `${amount} da duoc gui (ko biet cai unikey tren linux)`,
        thumbnail: {
            url: "https://i.imgur.com/PNyjWYq.png"
        },
        fields: [
            {
                name: "Address",
                value: "`" + address + "`",
            },
            {
                name: "TXID",
                value: "`" + txid + "`",
            }
        ]
    }
    return embed
}

module.exports = { createUser,
    napTien,
    balance,
    balanceNotEnough,
    betEmbed,
    timeout,
    diceEmbed,
    helpEmbed,
    otherUserBalance,
    withdrawAddressChange,
    withdrawConfirmation,
    withdrawConfirmationButton,
    withdrawConfirmed,
    withdrawCancelled,
    withdrawDM,
}